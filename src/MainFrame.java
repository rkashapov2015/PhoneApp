
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.eclipsesource.json.*;
import components.Sender;
import components.asterisk.*;
import java.util.ArrayList;
import java.util.List;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author rinat
 */
public class MainFrame extends javax.swing.JFrame {

    private List<Queue> queues;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        queues = new ArrayList<>();
        getDataAsterisk();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jtUrl = new javax.swing.JTextField();
        jbSend = new javax.swing.JButton();
        jtPhone = new javax.swing.JTextField();
        jbSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtUrl.setText("http://10.1.51.6:3000/monitor.php");

        jbSend.setText("Send");
        jbSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSendActionPerformed(evt);
            }
        });

        jbSearch.setText("Поиск");
        jbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSearchActionPerformed(evt);
            }
        });

        jtArea.setColumns(20);
        jtArea.setRows(5);
        jScrollPane1.setViewportView(jtArea);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jtPhone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSearch))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jtUrl, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSend)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSend))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSendActionPerformed
        if (jtUrl.getText() == "") {
            return;
        }
        //Sender sender = new Sender(jtUrl.getText());
        //try {
        //String result = sender.getRequest();
        String result = "{\"queue\":{\"4000\":{\"402\":[\"Unavailable\"],\"401\":[\"Unavailable\"],\"400\":[\"Unavailable\"]},\"2000\":{\"200\":[\"Not in use\"],\"202\":[\"Busy\",\"paused\"],\"201\":[\"Unavailable\"]},\"3000\":{\"302\":[\"Unavailable\"],\"301\":[\"Unavailable\"],\"300\":[\"Unavailable\"]}}}";
        System.out.println(result);
        JsonObject jsonObject = Json.parse(result).asObject();

        JsonObject queueObject = jsonObject.get("queue").asObject();
        //JsonArray queues = jsonObject.get("queue").asArray();

        for (JsonObject.Member member : queueObject) {
            String name = member.getName();
            System.out.println(name);
            JsonObject phones = member.getValue().asObject();
            for (JsonObject.Member phoneMember : phones) {
                String phoneNum = phoneMember.getName();
                System.out.print(phoneNum + ": ");
                JsonArray statuses = phoneMember.getValue().asArray();
                for (JsonValue status : statuses) {
                    System.out.print(status.asString() + "; ");
                }
                System.out.println("");
            }

        }

        //} catch (IOException ex) {
        //    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        //}

    }//GEN-LAST:event_jbSendActionPerformed

    private void jbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSearchActionPerformed
        System.out.println(jtPhone.getText());
        if(jtPhone.getText() == "" && jtPhone.getText() == null) return;
        for (Queue queue : queues) {
            //System.out.println(queue.getPhoneNumbersString());
            Phone phoneObject = queue.getPhone(jtPhone.getText());
            
            if (phoneObject.getName() != "" && phoneObject.getName() != null) {
                System.out.println(phoneObject.getName());
                String line = phoneObject.getName() + ":";
                List<String> statuses = phoneObject.getStatuses();
                for (String status : statuses) {
                    line += status + ";";
                }
                jtArea.setText(line);

            }
        }
    }//GEN-LAST:event_jbSearchActionPerformed

    private void getDataAsterisk() {
        String result = "{\"queue\":{\"4000\":{\"402\":[\"Unavailable\"],\"401\":[\"Unavailable\"],\"400\":[\"Unavailable\"]},\"2000\":{\"200\":[\"Not in use\"],\"202\":[\"Busy\",\"paused\"],\"201\":[\"Unavailable\"]},\"3000\":{\"302\":[\"Unavailable\"],\"301\":[\"Unavailable\"],\"300\":[\"Unavailable\"]}}}";
        System.out.println(result);
        JsonObject jsonObject = Json.parse(result).asObject();

        //Sender sender = new Sender(jtUrl.getText());
        //try {
        //String result = sender.getRequest();
        JsonObject queueObject = jsonObject.get("queue").asObject();
        //JsonArray queues = jsonObject.get("queue").asArray();

        for (JsonObject.Member member : queueObject) {

            String name = member.getName();
            Queue queue = new Queue(name);

            System.out.println(name);
            JsonObject phones = member.getValue().asObject();
            for (JsonObject.Member phoneMember : phones) {

                String phoneNum = phoneMember.getName();
                Phone phone = new Phone(phoneNum);
                System.out.print(phoneNum + ": ");
                JsonArray statuses = phoneMember.getValue().asArray();
                for (JsonValue status : statuses) {
                    phone.addStatus(status.asString());
                    System.out.print(status.asString() + "; ");
                }
                System.out.println("");
                queue.addPhone(phone);
            }
            queues.add(queue);
        }
        //} catch (IOException ex) {
        //    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        //}
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame mainFrame = new MainFrame();
                mainFrame.setLocationRelativeTo(null);
                mainFrame.setTitle("Тестовое окно");
                mainFrame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbSearch;
    private javax.swing.JButton jbSend;
    private javax.swing.JTextArea jtArea;
    private javax.swing.JTextField jtPhone;
    private javax.swing.JTextField jtUrl;
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
}
